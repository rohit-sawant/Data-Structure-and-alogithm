//question link : https://practice.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1#
class Solution 
{
    //Function to detect cycle in a directed graph.
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj)
    {
        // code here
        boolean vis[] = new boolean[V];
        boolean restack[] = new boolean[V];
        for(int i=0;i<V;i++){
            if(isCyclicUtil(i,vis,restack,adj))
            {
                return true;
            }
        }
        return false;
        
    }
    public boolean isCyclicUtil(int i,boolean vis[],boolean restack[],ArrayList<ArrayList<Integer>> adj)
    {
        if(restack[i])
        {
            return true;
        }  
        if(vis[i]){
            return false;
        }
        vis[i] = true;
        restack[i] = true;
        for(Integer neighbor:adj.get(i)){
            if(isCyclicUtil(neighbor,vis,restack,adj))
            {
                return true;
            }
        }
        restack[i] = false;
        return false;
    }
}