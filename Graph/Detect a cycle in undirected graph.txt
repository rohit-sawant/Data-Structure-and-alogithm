class Solution
{
   public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj)
    {
        // code here
        boolean vis[] = new boolean[V];
//        boolean restack[] = new boolean[V];
        for(int i=0;i<V;i++){
//            System.out.println(i+"-->");
            if(!vis[i]) {
                if (isCyclicUtil(i, vis, adj, -1)) {
                    return true;
                }
            }
        }
        return false;

    }
    public boolean isCyclicUtil(int i,boolean vis[],ArrayList<ArrayList<Integer>> adj,int parent)
    {
       
//        if(vis[i]&&parent==i){
//            return false;
//        }
        vis[i] = true;
        for(Integer neighbor:adj.get(i)){
//            System.out.println(parent+" "+neighbor);
            if(!vis[neighbor]) {
                if (isCyclicUtil(neighbor, vis, adj, i)) {
                    return true;
                }
            }
            else if(parent!=neighbor)
            {
                return true;
            }

        }
        return false;
    }
}